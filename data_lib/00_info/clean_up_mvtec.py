#%%
import json

rev_bcc = {
    'bottle-broken_large': 'bottle with large break',
    'bottle-broken_small': 'bottle with small break',
    'bottle-contamination': 'bottle with contamination',
    'bottle-good': 'bottle',
    'cable-bent_wire': 'cable with bent wire',
    'cable-cable_swap': 'cable with inner cable swap',
    'cable-combined': 'cable with combined',
    'cable-cut_inner_insulation': 'cable with cut inner insulation',
    'cable-cut_outer_insulation': 'cable with cut outer insulation',
    'cable-good': 'cable',
    'cable-missing_cable': 'cable with missing inner cable',
    'cable-missing_wire': 'cable with missing wire',
    'cable-poke_insulation': 'cable with poke insulation',
    'capsule-crack': 'capsule with crack',
    'capsule-faulty_imprint': 'capsule with faulty imprint',
    'capsule-good': 'capsule',
    'capsule-poke': 'capsule with poke',
    'capsule-scratch': 'capsule with scratched',
    'capsule-squeeze': 'capsule with squeeze',
    'carpet-color': 'carpet with colored spots',
    'carpet-cut': 'carpet with cut',
    'carpet-good': 'carpet',
    'carpet-hole': 'carpet with hole',
    'carpet-metal_contamination': 'carpet with metal contamination',
    'carpet-thread': 'carpet with thread',
    'grid-bent': 'grid with bent',
    'grid-broken': 'grid with broken',
    'grid-glue': 'grid with glue',
    'grid-good': 'grid',
    'grid-metal_contamination': 'grid with metal contamination',
    'grid-thread': 'grid with thread',
    'hazelnut-crack': 'hazelnut with crack',
    'hazelnut-cut': 'hazelnut with cut',
    'hazelnut-good': 'hazelnut',
    'hazelnut-hole': 'hazelnut with hole',
    'hazelnut-print': 'hazelnut with print',
    'leather-color': 'leather with colored spots',
    'leather-cut': 'leather with cut',
    'leather-fold': 'leather with fold',
    'leather-glue': 'leather with glue',
    'leather-good': 'leather',
    'leather-poke': 'leather with poke',
    'metal_nut-bent': 'metal nut with bent',
    'metal_nut-color': 'metal nut with colored spots',
    'metal_nut-flip': 'metal nut with flip',
    'metal_nut-good': 'metal nut',
    'metal_nut-scratch': 'metal nut with scratched',
    'pill-color': 'pill with colored spots',
    'pill-combined': 'pill with combined',
    'pill-contamination': 'pill with contamination',
    'pill-crack': 'pill with crack',
    'pill-faulty_imprint': 'pill with faulty imprint',
    'pill-good': 'pill',
    'pill-pill_type': 'pill with pill type',
    'pill-scratch': 'pill with scratched',
    'screw-good': 'screw',
    'screw-manipulated_front': 'screw with manipulated front',
    'screw-scratch_head': 'screw with scratched head',
    'screw-scratch_neck': 'screw with scratched neck',
    'screw-thread_side': 'screw with thread side',
    'screw-thread_top': 'screw with thread top',
    'tile-crack': 'tile with crack',
    'tile-glue_strip': 'tile with glue strip',
    'tile-good': 'tile',
    'tile-gray_stroke': 'tile with gray stroke',
    'tile-oil': 'tile with oil',
    'tile-rough': 'tile with rough',
    'toothbrush-defective': 'defective toothbrush',
    'toothbrush-good': 'toothbrush',
    'transistor-bent_lead': 'transistor with bent lead',
    'transistor-cut_lead': 'transistor with cut lead',
    'transistor-damaged_case': 'transistor with damaged case',
    'transistor-good': 'transistor',
    'transistor-misplaced': 'missing transistor',
    'wood-color': 'wood with colored spots',
    'wood-combined': 'wood with combined',
    'wood-good': 'wood',
    'wood-hole': 'wood with hole',
    'wood-liquid': 'wood with liquid',
    'wood-scratch': 'wood with scratched',
    'zipper-broken_teeth': 'zipper with broken teeth',
    'zipper-combined': 'zipper with combined',
    'zipper-fabric_border': 'zipper with fabric border',
    'zipper-fabric_interior': 'zipper with fabric interior',
    'zipper-good': 'zipper',
    'zipper-rough': 'zipper with rough',
    'zipper-split_teeth': 'zipper with split teeth',
    'zipper-squeezed_teeth': 'zipper with squeezed teeth'
}
inv_rev = {val: key for key, val in rev_bcc.items()}
# %%
files = ['MVTECAD_Eval_train_224.json', 'MVTECAD_Eval_test_224.json'] 
for file in files:
    lf = json.load(open(file, 'r'))
    # for key in lf.keys():
    #     classname = lf[key]['classname']
    #     updated = rev_bcc[classname]
    #     lf[key]['classname'] = lf[key]['classname'].replace(classname, updated)
    #     lf[key]['primer_caption'] = lf[key]['primer_caption'].replace(classname, updated)
    json.dump(lf, open(file, 'w'), indent=4)
# %%
